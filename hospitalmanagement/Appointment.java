/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.hospitalmanagement;
import java.awt.BorderLayout;
import org.jfree.chart.*;
import org.jfree.chart.plot.*;
import org.jfree.chart.renderer.category.*;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;
import java.sql.DriverManager;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;

import java.sql.*;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JPanel;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author riyajoe07
 */
public class Appointment extends javax.swing.JFrame {

    Connection cn;

    /**
     * Creates new form Appointment2
     */
    public Appointment() {
        initComponents();
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {

                JLabel headerLabel = (JLabel) super.getTableCellRendererComponent(
                        table, value, isSelected, hasFocus, row, column);

                headerLabel.setBackground(new Color(0, 102, 204)); // Blue
                headerLabel.setForeground(Color.WHITE);            // White text
                headerLabel.setFont(new Font("Rockwell", Font.PLAIN, 18));
                headerLabel.setHorizontalAlignment(SwingConstants.CENTER);
                headerLabel.setOpaque(true); // This makes background visible
                headerLabel.setBorder(BorderFactory.createLineBorder(Color.black));
                return headerLabel;
            }
        };

        JTableHeader header = app_table.getTableHeader();
        for (int i = 0; i < app_table.getColumnModel().getColumnCount(); i++) {
            app_table.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            System.out.println("Driver loaded");
            try {
                cn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1522/FREE", "system", "joevita");
                System.out.println("Connected to Oracle db");
            } catch (Exception p) {
                System.out.println(p.getMessage());
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        toggle = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        operations = new javax.swing.JPanel();
        insertb = new javax.swing.JButton();
        deletb = new javax.swing.JButton();
        updateb = new javax.swing.JButton();
        viewb = new javax.swing.JButton();
        statb = new javax.swing.JButton();
        mainp = new javax.swing.JPanel();
        insertp = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        app_idti = new javax.swing.JTextField();
        app_pati = new javax.swing.JTextField();
        app_docti = new javax.swing.JTextField();
        app_dateti = new javax.swing.JTextField();
        app_timeti = new javax.swing.JTextField();
        app_insert = new javax.swing.JButton();
        deletep = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        app_idtd = new javax.swing.JTextField();
        app_delete = new javax.swing.JButton();
        updatep = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        app_idtu = new javax.swing.JTextField();
        app_patu = new javax.swing.JTextField();
        app_doctu = new javax.swing.JTextField();
        app_timeu = new javax.swing.JTextField();
        app_dateu = new javax.swing.JTextField();
        app_update = new javax.swing.JButton();
        viewp = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        app_table = new javax.swing.JTable();
        statp = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        homen = new javax.swing.JButton();
        patn = new javax.swing.JButton();
        docn = new javax.swing.JButton();
        nursen = new javax.swing.JButton();
        recepn = new javax.swing.JButton();
        billn = new javax.swing.JButton();
        roomn = new javax.swing.JButton();
        medicinen = new javax.swing.JButton();
        admn = new javax.swing.JButton();
        servicen = new javax.swing.JButton();
        presn = new javax.swing.JButton();
        deptn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1061, 50));

        toggle.setBackground(new java.awt.Color(204, 204, 255));
        toggle.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\menui.png")); // NOI18N
        toggle.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggle.setBorderPainted(false);
        toggle.setContentAreaFilled(false);
        toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 0, 24)); // NOI18N
        jLabel1.setText("NOVA HEAL");

        logout.setBackground(new java.awt.Color(204, 204, 255));
        logout.setFont(new java.awt.Font("Perpetua Titling MT", 0, 24)); // NOI18N
        logout.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\logouti.png")); // NOI18N
        logout.setText("logout");
        logout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        logout.setBorderPainted(false);
        logout.setContentAreaFilled(false);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 0, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\appi.png")); // NOI18N
        jLabel2.setText("APPOINTMENT MODULE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(toggle)
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(153, 153, 153)
                .addComponent(logout)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(logout)
                        .addComponent(jLabel2))
                    .addComponent(toggle))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 60));

        operations.setBackground(new java.awt.Color(153, 153, 255));
        operations.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        insertb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        insertb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\inserti.png")); // NOI18N
        insertb.setText("Insert");
        insertb.setBorderPainted(false);
        insertb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        insertb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        insertb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertbActionPerformed(evt);
            }
        });

        deletb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        deletb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\icons8-delete-64.png")); // NOI18N
        deletb.setText("Delete");
        deletb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deletb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deletb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletbActionPerformed(evt);
            }
        });

        updateb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        updateb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\icons8-update-64.png")); // NOI18N
        updateb.setText("Update");
        updateb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        updateb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebActionPerformed(evt);
            }
        });

        viewb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        viewb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\icons8-view-64.png")); // NOI18N
        viewb.setText("View");
        viewb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        viewb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        viewb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbActionPerformed(evt);
            }
        });

        statb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        statb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\icons8-statistics-64.png")); // NOI18N
        statb.setText("Statistics");
        statb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        statb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        statb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operationsLayout = new javax.swing.GroupLayout(operations);
        operations.setLayout(operationsLayout);
        operationsLayout.setHorizontalGroup(
            operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(insertb)
                .addGap(71, 71, 71)
                .addComponent(deletb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addComponent(viewb)
                .addGap(73, 73, 73)
                .addComponent(statb)
                .addGap(30, 30, 30))
            .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(operationsLayout.createSequentialGroup()
                    .addGap(362, 362, 362)
                    .addComponent(updateb)
                    .addContainerGap(362, Short.MAX_VALUE)))
        );
        operationsLayout.setVerticalGroup(
            operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(operationsLayout.createSequentialGroup()
                        .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deletb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(insertb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(112, 112, 112))
                    .addGroup(operationsLayout.createSequentialGroup()
                        .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewb, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(statb, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(operationsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(updateb)
                    .addContainerGap(112, Short.MAX_VALUE)))
        );

        getContentPane().add(operations, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, -1, 110));

        mainp.setLayout(new java.awt.CardLayout());

        insertp.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel3.setText("Appointment Id");

        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel4.setText("Patient Id");

        jLabel5.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel5.setText("Doctor Id");

        jLabel6.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel6.setText("Appointment Date");

        jLabel7.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel7.setText("Appointment Time");

        app_docti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                app_doctiActionPerformed(evt);
            }
        });

        app_insert.setBackground(new java.awt.Color(204, 204, 255));
        app_insert.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        app_insert.setText("Insert");
        app_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                app_insertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout insertpLayout = new javax.swing.GroupLayout(insertp);
        insertp.setLayout(insertpLayout);
        insertpLayout.setHorizontalGroup(
            insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertpLayout.createSequentialGroup()
                .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(insertpLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(insertpLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(app_timeti, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, insertpLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(app_dateti, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, insertpLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(app_docti, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, insertpLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(app_pati, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, insertpLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(107, 107, 107)
                                .addComponent(app_idti, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(insertpLayout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(app_insert)))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        insertpLayout.setVerticalGroup(
            insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertpLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(insertpLayout.createSequentialGroup()
                        .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(app_idti, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addComponent(jLabel4))
                    .addComponent(app_pati, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(app_docti, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(app_dateti, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(app_timeti, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(app_insert)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        mainp.add(insertp, "card2");

        deletep.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel8.setText("Appointment Id");

        app_idtd.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        app_delete.setBackground(new java.awt.Color(204, 204, 255));
        app_delete.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        app_delete.setText("Delete");
        app_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                app_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deletepLayout = new javax.swing.GroupLayout(deletep);
        deletep.setLayout(deletepLayout);
        deletepLayout.setHorizontalGroup(
            deletepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletepLayout.createSequentialGroup()
                .addGroup(deletepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deletepLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel8)
                        .addGap(123, 123, 123)
                        .addComponent(app_idtd, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(deletepLayout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(app_delete)))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        deletepLayout.setVerticalGroup(
            deletepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletepLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addGroup(deletepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(app_idtd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(61, 61, 61)
                .addComponent(app_delete)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        mainp.add(deletep, "card3");

        updatep.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel9.setText("Appointment Id");

        jLabel13.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel13.setText("Patient Id");

        jLabel10.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel10.setText("Doctor Id");

        jLabel11.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel11.setText("Appointment Date");

        jLabel12.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel12.setText("Appointment Time");

        app_update.setBackground(new java.awt.Color(204, 204, 255));
        app_update.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        app_update.setText("Update");
        app_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                app_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatepLayout = new javax.swing.GroupLayout(updatep);
        updatep.setLayout(updatepLayout);
        updatepLayout.setHorizontalGroup(
            updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatepLayout.createSequentialGroup()
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatepLayout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel13)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(104, 104, 104)
                        .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(app_timeu, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(app_doctu, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(app_patu, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(app_idtu, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(app_dateu, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(updatepLayout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addComponent(app_update)))
                .addContainerGap(216, Short.MAX_VALUE))
        );
        updatepLayout.setVerticalGroup(
            updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatepLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(updatepLayout.createSequentialGroup()
                        .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(updatepLayout.createSequentialGroup()
                                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(app_idtu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addComponent(jLabel13))
                            .addComponent(app_patu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addComponent(jLabel10))
                    .addComponent(app_doctu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(app_dateu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(app_timeu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(app_update)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        mainp.add(updatep, "card4");

        viewp.setBackground(new java.awt.Color(255, 255, 255));

        app_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ap_Id", "Pa_Id", "D_Id", "Ap_Date", "Ap_Time"
            }
        ));
        app_table.setRowHeight(25);
        app_table.setShowHorizontalLines(true);
        app_table.setShowVerticalLines(true);
        jScrollPane1.setViewportView(app_table);

        javax.swing.GroupLayout viewpLayout = new javax.swing.GroupLayout(viewp);
        viewp.setLayout(viewpLayout);
        viewpLayout.setHorizontalGroup(
            viewpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewpLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        viewpLayout.setVerticalGroup(
            viewpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewpLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        mainp.add(viewp, "card5");

        javax.swing.GroupLayout statpLayout = new javax.swing.GroupLayout(statp);
        statp.setLayout(statpLayout);
        statpLayout.setHorizontalGroup(
            statpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
        );
        statpLayout.setVerticalGroup(
            statpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );

        mainp.add(statp, "card6");

        getContentPane().add(mainp, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 820, 480));

        sidePanel.setBackground(new java.awt.Color(204, 204, 204));

        homen.setBackground(new java.awt.Color(204, 204, 204));
        homen.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        homen.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\homei.png")); // NOI18N
        homen.setText("Home");
        homen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        homen.setBorderPainted(false);
        homen.setContentAreaFilled(false);
        homen.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        homen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homenActionPerformed(evt);
            }
        });

        patn.setBackground(new java.awt.Color(204, 204, 204));
        patn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        patn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\patienti.png")); // NOI18N
        patn.setText("Patient");
        patn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        patn.setBorderPainted(false);
        patn.setContentAreaFilled(false);
        patn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patnActionPerformed(evt);
            }
        });

        docn.setBackground(new java.awt.Color(204, 204, 204));
        docn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        docn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\doctori.png")); // NOI18N
        docn.setText("Doctor");
        docn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        docn.setBorderPainted(false);
        docn.setContentAreaFilled(false);
        docn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docnActionPerformed(evt);
            }
        });

        nursen.setBackground(new java.awt.Color(204, 204, 204));
        nursen.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        nursen.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\nursei.png")); // NOI18N
        nursen.setText("Nurse");
        nursen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nursen.setBorderPainted(false);
        nursen.setContentAreaFilled(false);
        nursen.setDefaultCapable(false);
        nursen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nursenActionPerformed(evt);
            }
        });

        recepn.setBackground(new java.awt.Color(204, 204, 204));
        recepn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        recepn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\recepi.png")); // NOI18N
        recepn.setText("Receptionist");
        recepn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        recepn.setBorderPainted(false);
        recepn.setContentAreaFilled(false);
        recepn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recepnActionPerformed(evt);
            }
        });

        billn.setBackground(new java.awt.Color(204, 204, 204));
        billn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        billn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\billi.png")); // NOI18N
        billn.setText("Bill");
        billn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        billn.setBorderPainted(false);
        billn.setContentAreaFilled(false);
        billn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billnActionPerformed(evt);
            }
        });

        roomn.setBackground(new java.awt.Color(204, 204, 204));
        roomn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        roomn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\roomi.png")); // NOI18N
        roomn.setText("Room");
        roomn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        roomn.setBorderPainted(false);
        roomn.setContentAreaFilled(false);
        roomn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomnActionPerformed(evt);
            }
        });

        medicinen.setBackground(new java.awt.Color(204, 204, 204));
        medicinen.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        medicinen.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\medi.png")); // NOI18N
        medicinen.setText("Medicine");
        medicinen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        medicinen.setBorderPainted(false);
        medicinen.setContentAreaFilled(false);
        medicinen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicinenActionPerformed(evt);
            }
        });

        admn.setBackground(new java.awt.Color(204, 204, 204));
        admn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        admn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\admit.png")); // NOI18N
        admn.setText("Admission");
        admn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        admn.setBorderPainted(false);
        admn.setContentAreaFilled(false);
        admn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admnActionPerformed(evt);
            }
        });

        servicen.setBackground(new java.awt.Color(204, 204, 204));
        servicen.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        servicen.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\servicei.png")); // NOI18N
        servicen.setText("Nursing Service");
        servicen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        servicen.setBorderPainted(false);
        servicen.setContentAreaFilled(false);
        servicen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicenActionPerformed(evt);
            }
        });

        presn.setBackground(new java.awt.Color(204, 204, 204));
        presn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        presn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\presi.png")); // NOI18N
        presn.setText("Prescription");
        presn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        presn.setBorderPainted(false);
        presn.setContentAreaFilled(false);
        presn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presnActionPerformed(evt);
            }
        });

        deptn.setBackground(new java.awt.Color(204, 204, 204));
        deptn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        deptn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\depti.png")); // NOI18N
        deptn.setText("Department");
        deptn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        deptn.setBorderPainted(false);
        deptn.setContentAreaFilled(false);
        deptn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deptn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(presn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(homen, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nursen, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(recepn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(billn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(medicinen, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(admn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(servicen, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(patn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 34, Short.MAX_VALUE))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homen)
                .addGap(21, 21, 21)
                .addComponent(deptn)
                .addGap(18, 18, 18)
                .addComponent(docn)
                .addGap(18, 18, 18)
                .addComponent(nursen)
                .addGap(18, 18, 18)
                .addComponent(patn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recepn)
                .addGap(18, 18, 18)
                .addComponent(billn)
                .addGap(18, 18, 18)
                .addComponent(roomn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(medicinen)
                .addGap(18, 18, 18)
                .addComponent(admn)
                .addGap(18, 18, 18)
                .addComponent(servicen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(presn)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        getContentPane().add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 280, 660));

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void slideSidePanel(boolean show) {
        new Thread(() -> {
            int width = sidePanel.getWidth();
            int step = 10;
            int delay = 5;

            if (show) {
                for (int i = 0; i <= width; i += step) {
                    sidePanel.setSize(i, sidePanel.getHeight());
                    try {
                        Thread.sleep(delay);
                    } catch (InterruptedException e) {
                    }
                }
            } else {
                for (int i = width; i >= 0; i -= step) {
                    sidePanel.setSize(i, sidePanel.getHeight());
                    try {
                        Thread.sleep(delay);
                    } catch (InterruptedException e) {
                    }
                }
            }
            sidePanel.setVisible(show);
        }).start();

    }

    private boolean isSidePanelVisible = true;
    private void toggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleActionPerformed
        // TODO add your handling code here:

        isSidePanelVisible = !isSidePanelVisible;  // Toggle state
        slideSidePanel(isSidePanelVisible);
    }//GEN-LAST:event_toggleActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        Login LoginFrame = new Login();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void insertbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertbActionPerformed
        // TODO add your handling code here:
        mainp.removeAll();
        mainp.add(insertp);
        mainp.repaint();
        mainp.revalidate();
    }//GEN-LAST:event_insertbActionPerformed

    private void deletbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletbActionPerformed
        mainp.removeAll();
        mainp.add(deletep);
        mainp.repaint();
        mainp.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_deletbActionPerformed

    private void updatebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebActionPerformed
        // TODO add your handling code here:
        mainp.removeAll();
        mainp.add(updatep);
        mainp.repaint();
        mainp.revalidate();
    }//GEN-LAST:event_updatebActionPerformed

    private void viewbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbActionPerformed
        // TODO add your handling code here:
        mainp.removeAll();
        mainp.add(viewp);
        mainp.repaint();
        mainp.revalidate();
        mainp.removeAll();
        mainp.add(viewp);
        mainp.repaint();
        mainp.revalidate();
        try {
            Statement st = cn.createStatement();
            String sql = "Select * from Appointment";
            ResultSet rs = st.executeQuery(sql);
            DefaultTableModel tblModel = (DefaultTableModel) app_table.getModel();
            tblModel.setRowCount(0);
            SimpleDateFormat disp = new SimpleDateFormat("dd-MM-yyyy");

            while (rs.next()) {
                String ap_id = String.valueOf(rs.getInt("ap_id"));
                String pa_id = String.valueOf(rs.getInt("pa_id"));
                String d_id = String.valueOf(rs.getInt("d_id"));
                String ap_date = disp.format(rs.getDate("ap_Date"));
                String ap_time = rs.getString("ap_time");

                tblModel.addRow(new Object[]{ap_id, pa_id, d_id,ap_date,ap_time});
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_viewbActionPerformed
 public JPanel createAllChartsPanel() {
        JPanel container = new JPanel(new GridLayout(1, 3));
        container.setBackground(Color.WHITE);

        container.add(createBarChart());
        container.add(createLineChart());
        container.add(createPieChart());

        return container;
    }

    // Chart 1: Bar Chart - Appointments per Date
    private ChartPanel createBarChart() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        try  {
            String sql = "SELECT Ap_date, COUNT(*) FROM Appointment GROUP BY Ap_date ORDER BY Ap_date";
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM");

            while (rs.next()) {
                String date = sdf.format(rs.getDate(1));
                int count = rs.getInt(2);
                dataset.addValue(count, "Appointments", date);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error loading bar chart: " + e.getMessage());
        }

        JFreeChart chart = ChartFactory.createBarChart(
                "Appointments Per Date", "Date", "Count",
                dataset, PlotOrientation.VERTICAL,
                false, true, false
        );

        chart.setBackgroundPaint(Color.WHITE);
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setBackgroundPaint(new Color(230, 255, 250));

        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, new Color(100, 180, 250));

        return new ChartPanel(chart);
    }

    // Chart 2: Line Chart - Appointments Per Doctor
    private ChartPanel createLineChart() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        try  {
            String sql = "SELECT D_id, COUNT(*) FROM Appointment GROUP BY D_id ORDER BY D_id";
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String doctor = "Doctor " + rs.getInt(1);
                int count = rs.getInt(2);
                dataset.addValue(count, "Appointments", doctor);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error loading line chart: " + e.getMessage());
        }

        JFreeChart chart = ChartFactory.createLineChart(
                "Appointments Per Doctor", "Doctor", "Count",
                dataset, PlotOrientation.VERTICAL,
                false, true, false
        );

        chart.setBackgroundPaint(Color.WHITE);
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setBackgroundPaint(new Color(255, 245, 230));

        LineAndShapeRenderer renderer = new LineAndShapeRenderer();
        renderer.setSeriesPaint(0, new Color(255, 102, 102));
        plot.setRenderer(renderer);

        return new ChartPanel(chart);
    }

    // Chart 3: Pie Chart - Appointment Distribution by Doctor
    private ChartPanel createPieChart() {
        DefaultPieDataset dataset = new DefaultPieDataset();

        try {
            String sql = "SELECT D_id, COUNT(*) FROM Appointment GROUP BY D_id";
            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String doctor = "Doctor " + rs.getInt(1);
                int count = rs.getInt(2);
                dataset.setValue(doctor, count);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error loading pie chart: " + e.getMessage());
        }

        JFreeChart chart = ChartFactory.createPieChart(
                "Appointment Distribution by Doctor",
                dataset, true, true, false
        );

        chart.setBackgroundPaint(Color.WHITE);
        chart.getPlot().setBackgroundPaint(new Color(240, 255, 240));

        return new ChartPanel(chart);
    }
    private void statbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statbActionPerformed
        // TODO add your handling code here:
        statp.removeAll(); // Clear previous charts
    statp.setLayout(new BorderLayout()); // Or GridLayout, etc.

    Appointment panelBuilder = new Appointment();
    JPanel charts = panelBuilder.createAllChartsPanel(); // This builds all 3 charts

    statp.add(charts, BorderLayout.CENTER); // Add charts to statp

    statp.revalidate();
    statp.repaint();

    // Switch to the statistics panel in the CardLayout
    mainp.removeAll();
    mainp.add(statp); // or mainp.show("statp") if named in CardLayout
    mainp.revalidate();
    mainp.repaint();
    }//GEN-LAST:event_statbActionPerformed

    private void app_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_app_updateActionPerformed
        // TODO add your handling code here:
        int app_id = Integer.parseInt(app_idtu.getText());
        int pat_id = Integer.parseInt(app_patu.getText());
        int doc_id = Integer.parseInt(app_doctu.getText());
        String app_date = app_dateu.getText();
        String app_time = app_timeu.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        try {
            java.util.Date utilDate = sdf.parse(app_date);
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            String getOldDetails = "select d_id,ap_date,ap_time from Appointment where ap_id=?";
            PreparedStatement psOld = cn.prepareStatement(getOldDetails);
            psOld.setInt(1, app_id);
            ResultSet rsOld = psOld.executeQuery();
            if (!rsOld.next()) {
                JOptionPane.showMessageDialog(null, "Appointment not found");
                return;
            }
            int oldDocId = rsOld.getInt("d_id");
            java.sql.Date oldDate = rsOld.getDate("ap_date");
            String oldTime = rsOld.getString("ap_time");

            String sqlCheck = "select status from Doctor_Schedule where d_id=? and avail_date=? and avail_time=?";
            PreparedStatement psCheck = cn.prepareStatement(sqlCheck);
            psCheck.setInt(1, doc_id);
            psCheck.setDate(2, sqlDate);
            psCheck.setString(3, app_time);
            ResultSet rsCheck = psCheck.executeQuery();
            if (rsCheck.next() && rsCheck.getString("status").equalsIgnoreCase("Free")) {
                String releaseOld = "update doctor_schedule set status='Free' where d_id=? and avail_date=? and avail_time=?";
                PreparedStatement psRelease = cn.prepareStatement(releaseOld);
                psRelease.setInt(1, oldDocId);
                psRelease.setDate(2, oldDate);
                psRelease.setString(3, oldTime);
                psRelease.executeUpdate();

                String updateApp = "update appointment set pa_id = ?,d_id=?,ap_date=?,ap_time=? where ap_id=?";
                PreparedStatement psUpdate = cn.prepareStatement(updateApp);
                psUpdate.setInt(1, pat_id);
                psUpdate.setInt(2, doc_id);
                psUpdate.setDate(3, sqlDate);
                psUpdate.setString(4, app_time);
                psUpdate.setInt(5, app_id);
                int rows = psUpdate.executeUpdate();

                String bookNew = "update doctor_schedule set status = 'Booked' where d_id=? and avail_date=? and avail_time=?";
                PreparedStatement psBook = cn.prepareStatement(bookNew);
                psBook.setInt(1, doc_id);
                psBook.setDate(2, sqlDate);
                psBook.setString(3, app_time);
                psBook.executeUpdate();

                if (rows > 0) {
                    JOptionPane.showMessageDialog(null, "Appointment Updated Successfully");
                } else {
                    JOptionPane.showMessageDialog(null, "Update failed in Appointment");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Selected new slot is not free");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_app_updateActionPerformed

    private void app_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_app_deleteActionPerformed
        // TODO add your handling code here:
        int app_id = Integer.parseInt(app_idtd.getText());
        String getDetails = "select d_id,ap_date,ap_time from appointment where ap_id = ?";
        try {
            PreparedStatement psGet = cn.prepareStatement(getDetails);
            psGet.setInt(1, app_id);
            ResultSet rs = psGet.executeQuery();
            if (rs.next()) {
                int doctor_id = rs.getInt("d_id");
                Date utilDate = rs.getDate("ap_date");
                java.sql.Date sqldate = new java.sql.Date(utilDate.getTime());
                String timeStr = rs.getString("ap_time");
                String sqlDelete = "Delete from Appointment where ap_id=?";
                PreparedStatement psDelete = cn.prepareStatement(sqlDelete);
                psDelete.setInt(1, app_id);
                int rows = psDelete.executeUpdate();
                if (rows > 0) {
                    JOptionPane.showMessageDialog(null, "Appointment Deleted");
                    String updateSlot = "update Doctor_Schedule set status = 'Free' where d_id=? and avail_date=? and avail_time=?";
                    PreparedStatement psUpdate = cn.prepareStatement(updateSlot);
                    psUpdate.setInt(1, doctor_id);
                    psUpdate.setDate(2, sqldate);
                    psUpdate.setString(3, timeStr);
                    psUpdate.executeUpdate();

                } else {
                    JOptionPane.showMessageDialog(null, "Deletion failed in Appointment");

                }
            } else {
                JOptionPane.showMessageDialog(null, "Appointment Not found");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_app_deleteActionPerformed

    private void app_doctiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_app_doctiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_app_doctiActionPerformed

    private void app_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_app_insertActionPerformed
        // TODO add your handling code here:
        int app_id = Integer.parseInt(app_idti.getText());
        int pat_id = Integer.parseInt(app_pati.getText());
        int doc_id = Integer.parseInt(app_docti.getText());
        String app_date = app_dateti.getText();
        String app_time = app_timeti.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String sqlCheck = "select status from Doctor_Schedule where D_id=? and avail_date=? and avail_time=?";
        try {
            Date utilDate = sdf.parse(app_date);
            java.sql.Date sqldate = new java.sql.Date(utilDate.getTime());
            PreparedStatement psCheck = cn.prepareStatement(sqlCheck);
            psCheck.setInt(1, doc_id);
            psCheck.setDate(2, sqldate);
            psCheck.setString(3, app_time);
            ResultSet rs1 = psCheck.executeQuery();
            if (rs1.next()) {
                String status = rs1.getString("status");
                if (status.equalsIgnoreCase("Free")) {
                    String sql = "Insert into Appointment values(?,?,?,?,?)";
                    PreparedStatement ps = cn.prepareStatement(sql);
                    ps.setInt(1, app_id);
                    ps.setInt(2, pat_id);
                    ps.setInt(3, doc_id);
                    ps.setDate(4, sqldate);
                    ps.setString(5, app_time);
                    int rows = ps.executeUpdate();
                    if (rows > 0) {
                        JOptionPane.showMessageDialog(null, "Appointment Booked");
                    } else {
                        JOptionPane.showMessageDialog(null, "Insertion failed in Appointment");
                    }
                    String updateSlot = "update doctor_schedule set status = 'Booked' where d_id = ? and avail_date=? and avail_time=?";
                    PreparedStatement psUpdate = cn.prepareStatement(updateSlot);
                    psUpdate.setInt(1, doc_id);
                    psUpdate.setDate(2, sqldate);
                    psUpdate.setString(3, app_time);
                    int rows2 = psUpdate.executeUpdate();
                    if (rows2 > 0) {
                        JOptionPane.showMessageDialog(null, "Doctor Schedule Updated");
                    } else {
                        JOptionPane.showMessageDialog(null, "Doctor Schedule Updation Failed");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Slot Already Booked");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Slot not found");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error:" + e.getMessage());
        }

    }//GEN-LAST:event_app_insertActionPerformed

    private void homenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homenActionPerformed
        // TODO add your handling code here:
        welcome welcomeFrame = new welcome();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_homenActionPerformed

    private void patnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patnActionPerformed
        // TODO add your handling code here:
        Patient welcomeFrame = new Patient();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_patnActionPerformed

    private void docnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docnActionPerformed
        // TODO add your handling code here:
        Doctor welcomeFrame = new Doctor();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_docnActionPerformed

    private void nursenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nursenActionPerformed
        // TODO add your handling code here:
        Nurse welcomeFrame = new Nurse();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_nursenActionPerformed

    private void recepnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recepnActionPerformed
        // TODO add your handling code here:
        Receptionist welcomeFrame = new Receptionist();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_recepnActionPerformed

    private void billnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billnActionPerformed
        // TODO add your handling code here:
        Bill welcomeFrame = new Bill();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_billnActionPerformed

    private void roomnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomnActionPerformed
        // TODO add your handling code here:
        Room welcomeFrame = new Room();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_roomnActionPerformed

    private void medicinenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicinenActionPerformed
        Medicine welcomeFrame = new Medicine();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_medicinenActionPerformed

    private void admnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admnActionPerformed
        // TODO add your handling code here:
        Admission welcomeFrame = new Admission();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_admnActionPerformed

    private void servicenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicenActionPerformed
        Nursing_Service welcomeFrame = new Nursing_Service();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_servicenActionPerformed

    private void presnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presnActionPerformed
        // TODO add your handling code here:
        Prescription welcomeFrame = new Prescription();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_presnActionPerformed

    private void deptnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptnActionPerformed
        // TODO add your handling code here:
        Department deptFrame = new Department();
        deptFrame.setVisible(true);
        deptFrame.pack();
        deptFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_deptnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admn;
    private javax.swing.JTextField app_dateti;
    private javax.swing.JTextField app_dateu;
    private javax.swing.JButton app_delete;
    private javax.swing.JTextField app_docti;
    private javax.swing.JTextField app_doctu;
    private javax.swing.JTextField app_idtd;
    private javax.swing.JTextField app_idti;
    private javax.swing.JTextField app_idtu;
    private javax.swing.JButton app_insert;
    private javax.swing.JTextField app_pati;
    private javax.swing.JTextField app_patu;
    private javax.swing.JTable app_table;
    private javax.swing.JTextField app_timeti;
    private javax.swing.JTextField app_timeu;
    private javax.swing.JButton app_update;
    private javax.swing.JButton billn;
    private javax.swing.JButton deletb;
    private javax.swing.JPanel deletep;
    private javax.swing.JButton deptn;
    private javax.swing.JButton docn;
    private javax.swing.JButton homen;
    private javax.swing.JButton insertb;
    private javax.swing.JPanel insertp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JPanel mainp;
    private javax.swing.JButton medicinen;
    private javax.swing.JButton nursen;
    private javax.swing.JPanel operations;
    private javax.swing.JButton patn;
    private javax.swing.JButton presn;
    private javax.swing.JButton recepn;
    private javax.swing.JButton roomn;
    private javax.swing.JButton servicen;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JButton statb;
    private javax.swing.JPanel statp;
    private javax.swing.JButton toggle;
    private javax.swing.JButton updateb;
    private javax.swing.JPanel updatep;
    private javax.swing.JButton viewb;
    private javax.swing.JPanel viewp;
    // End of variables declaration//GEN-END:variables
}
