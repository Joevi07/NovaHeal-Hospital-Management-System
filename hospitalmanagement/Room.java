/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.hospitalmanagement;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.DriverManager;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import org.jfree.chart.*;
import org.jfree.chart.plot.*;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import javax.swing.*;
import java.awt.*;
import java.sql.*;

import java.sql.*;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.table.DefaultTableModel;
import org.jfree.chart.renderer.category.BarRenderer;

/**
 *
 * @author riyajoe07
 */
public class Room extends javax.swing.JFrame {
    Connection cn;
    /**
     * Creates new form Room
     */
    public Room() {
        initComponents();
         DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel headerLabel = (JLabel) super.getTableCellRendererComponent(
                table, value, isSelected, hasFocus, row, column);

            headerLabel.setBackground(new Color(0, 102, 204)); // Blue
            headerLabel.setForeground(Color.WHITE);            // White text
            headerLabel.setFont(new Font("Rockwell", Font.PLAIN, 18));
            headerLabel.setHorizontalAlignment(SwingConstants.CENTER);
            headerLabel.setOpaque(true); // This makes background visible
            headerLabel.setBorder(BorderFactory.createLineBorder(Color.black));
            return headerLabel;
        }
    };

    JTableHeader header1 = room_table.getTableHeader();
    for (int i = 0; i < room_table.getColumnModel().getColumnCount(); i++) {
        room_table.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
    }
     JTableHeader header2 = roomav_table.getTableHeader();
    for (int i = 0; i < roomav_table.getColumnModel().getColumnCount(); i++) {
        roomav_table.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
    }
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            System.out.println("Driver loaded");
            try {
                cn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1522/FREE", "system", "joevita");
                System.out.println("Connected to Oracle db");
            } catch (Exception p) {
                System.out.println(p.getMessage());
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        toggle = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        mainp = new javax.swing.JPanel();
        insertp = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        room_costi = new javax.swing.JTextField();
        room_idti = new javax.swing.JTextField();
        room_insert = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        room_bookti = new javax.swing.JTextField();
        room_avti = new javax.swing.JComboBox<>();
        room_tyti = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        room_eni = new javax.swing.JTextField();
        jlabel = new javax.swing.JLabel();
        room_sti = new javax.swing.JTextField();
        deletep = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        room_idtd = new javax.swing.JTextField();
        room_delete = new javax.swing.JButton();
        updatep = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        room_costu = new javax.swing.JTextField();
        room_idtu = new javax.swing.JTextField();
        room_update = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        room_avtu = new javax.swing.JComboBox<>();
        room_booktu = new javax.swing.JTextField();
        room_tytu = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        room_enu = new javax.swing.JTextField();
        room_stu = new javax.swing.JTextField();
        viewp = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        room_table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        roomav_table = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        statp = new javax.swing.JPanel();
        operations = new javax.swing.JPanel();
        insertb = new javax.swing.JButton();
        deletb = new javax.swing.JButton();
        updateb = new javax.swing.JButton();
        viewb = new javax.swing.JButton();
        statb = new javax.swing.JButton();
        sidePanel = new javax.swing.JPanel();
        homen = new javax.swing.JButton();
        patn = new javax.swing.JButton();
        docn = new javax.swing.JButton();
        nursen = new javax.swing.JButton();
        recepn = new javax.swing.JButton();
        billn = new javax.swing.JButton();
        medicinen = new javax.swing.JButton();
        admn = new javax.swing.JButton();
        appn = new javax.swing.JButton();
        servicen = new javax.swing.JButton();
        presn = new javax.swing.JButton();
        deptn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1061, 50));

        toggle.setBackground(new java.awt.Color(204, 204, 255));
        toggle.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\menui.png")); // NOI18N
        toggle.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggle.setBorderPainted(false);
        toggle.setContentAreaFilled(false);
        toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 0, 24)); // NOI18N
        jLabel1.setText("NOVA HEAL");

        logout.setBackground(new java.awt.Color(204, 204, 255));
        logout.setFont(new java.awt.Font("Perpetua Titling MT", 0, 24)); // NOI18N
        logout.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\logouti.png")); // NOI18N
        logout.setText("logout");
        logout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        logout.setBorderPainted(false);
        logout.setContentAreaFilled(false);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 0, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\roomi.png")); // NOI18N
        jLabel2.setText("ROOM MODULE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(toggle)
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(210, 210, 210)
                .addComponent(logout)
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(logout)
                        .addComponent(jLabel2))
                    .addComponent(toggle))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 60));

        mainp.setLayout(new java.awt.CardLayout());

        insertp.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel3.setText("Room Id");

        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel4.setText("Room Type");

        jLabel5.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel5.setText("Room Cost");

        room_costi.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_costi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_costiActionPerformed(evt);
            }
        });

        room_idti.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        room_insert.setBackground(new java.awt.Color(204, 204, 255));
        room_insert.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        room_insert.setText("Insert");
        room_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_insertActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel6.setText("Room Available");

        jLabel7.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel7.setText("Room Booking Date");

        room_bookti.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_bookti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_booktiActionPerformed(evt);
            }
        });

        room_avti.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_avti.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No", " " }));
        room_avti.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        room_tyti.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_tyti.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "ICU", "Semi-Private", "Private", " " }));
        room_tyti.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel16.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel16.setText("Room Start Time");

        room_eni.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_eni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_eniActionPerformed(evt);
            }
        });

        jlabel.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jlabel.setText("Room End Time");

        room_sti.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_sti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_stiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout insertpLayout = new javax.swing.GroupLayout(insertp);
        insertp.setLayout(insertpLayout);
        insertpLayout.setHorizontalGroup(
            insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertpLayout.createSequentialGroup()
                .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(insertpLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(56, 56, 56)
                        .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(room_costi, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(room_tyti, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(room_idti, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlabel))
                        .addGap(36, 36, 36)
                        .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(insertpLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(room_avti, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(insertpLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(room_sti, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(insertpLayout.createSequentialGroup()
                                .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(insertpLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(room_bookti, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(room_eni, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(insertpLayout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(room_insert)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        insertpLayout.setVerticalGroup(
            insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertpLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(insertpLayout.createSequentialGroup()
                        .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(room_idti, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(room_avti, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69)
                        .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(room_tyti, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(room_bookti, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(insertpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(room_costi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(room_sti, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addComponent(jlabel))
                    .addComponent(room_eni, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(room_insert)
                .addGap(43, 43, 43))
        );

        mainp.add(insertp, "card2");

        deletep.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel8.setText("Room Id");

        room_idtd.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        room_delete.setBackground(new java.awt.Color(204, 204, 255));
        room_delete.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        room_delete.setText("Delete");
        room_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deletepLayout = new javax.swing.GroupLayout(deletep);
        deletep.setLayout(deletepLayout);
        deletepLayout.setHorizontalGroup(
            deletepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletepLayout.createSequentialGroup()
                .addGroup(deletepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deletepLayout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jLabel8)
                        .addGap(136, 136, 136)
                        .addComponent(room_idtd, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(deletepLayout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(room_delete)))
                .addContainerGap(207, Short.MAX_VALUE))
        );
        deletepLayout.setVerticalGroup(
            deletepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletepLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(deletepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(room_idtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(50, 50, 50)
                .addComponent(room_delete)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        mainp.add(deletep, "card3");

        updatep.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel9.setText("Room Id");

        jLabel10.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel10.setText("Room Cost");

        jLabel11.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel11.setText("Room type");

        room_costu.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        room_idtu.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        room_update.setBackground(new java.awt.Color(204, 204, 255));
        room_update.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        room_update.setText("Update");
        room_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_updateActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel12.setText("Room Available");

        jLabel13.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel13.setText("Room Booking Date");

        room_avtu.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_avtu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No", " " }));

        room_booktu.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N

        room_tytu.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_tytu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "ICU", "Semi-Private", "Private", " " }));

        jLabel17.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel17.setText("Room End Time");

        jLabel18.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel18.setText("Room Start Time");

        room_enu.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_enu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_enuActionPerformed(evt);
            }
        });

        room_stu.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        room_stu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room_stuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatepLayout = new javax.swing.GroupLayout(updatep);
        updatep.setLayout(updatepLayout);
        updatepLayout.setHorizontalGroup(
            updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatepLayout.createSequentialGroup()
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatepLayout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(room_update))
                    .addGroup(updatepLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel11)))
                        .addGap(46, 46, 46)
                        .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(room_idtu, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(room_tytu, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(room_costu, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatepLayout.createSequentialGroup()
                        .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(room_booktu, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(room_avtu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(updatepLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(updatepLayout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel17)
                .addGap(78, 78, 78)
                .addComponent(room_enu, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatepLayout.createSequentialGroup()
                    .addContainerGap(609, Short.MAX_VALUE)
                    .addComponent(room_stu, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        updatepLayout.setVerticalGroup(
            updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatepLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(room_idtu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(room_avtu, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(room_tytu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(room_booktu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(room_costu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)))
                .addGap(38, 38, 38)
                .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(room_enu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(room_update)
                .addContainerGap(103, Short.MAX_VALUE))
            .addGroup(updatepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(updatepLayout.createSequentialGroup()
                    .addGap(214, 214, 214)
                    .addComponent(room_stu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(225, Short.MAX_VALUE)))
        );

        mainp.add(updatep, "card4");

        viewp.setBackground(new java.awt.Color(255, 255, 255));

        room_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "R_Id", "R_type", "R_Cost"
            }
        ));
        room_table.setRowHeight(25);
        room_table.setSelectionBackground(new java.awt.Color(204, 204, 255));
        room_table.setShowHorizontalLines(true);
        room_table.setShowVerticalLines(true);
        jScrollPane1.setViewportView(room_table);

        roomav_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "R_Id", "R_Date", "R_Start_Time", "R_End_Time", "R_Available"
            }
        ));
        roomav_table.setRowHeight(25);
        roomav_table.setSelectionBackground(new java.awt.Color(204, 204, 255));
        roomav_table.setShowHorizontalLines(true);
        roomav_table.setShowVerticalLines(true);
        jScrollPane2.setViewportView(roomav_table);

        jLabel14.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 0, 255));
        jLabel14.setText("Room");

        jLabel15.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 255));
        jLabel15.setText("Room_Availability");

        javax.swing.GroupLayout viewpLayout = new javax.swing.GroupLayout(viewp);
        viewp.setLayout(viewpLayout);
        viewpLayout.setHorizontalGroup(
            viewpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(viewpLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(153, 153, 153))
        );
        viewpLayout.setVerticalGroup(
            viewpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewpLayout.createSequentialGroup()
                .addGroup(viewpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(viewpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(viewpLayout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        mainp.add(viewp, "card5");

        statp.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout statpLayout = new javax.swing.GroupLayout(statp);
        statp.setLayout(statpLayout);
        statpLayout.setHorizontalGroup(
            statpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
        );
        statpLayout.setVerticalGroup(
            statpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );

        mainp.add(statp, "card6");

        getContentPane().add(mainp, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 820, 470));

        operations.setBackground(new java.awt.Color(153, 153, 255));
        operations.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        insertb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        insertb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\inserti.png")); // NOI18N
        insertb.setText("Insert");
        insertb.setBorderPainted(false);
        insertb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        insertb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        insertb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertbActionPerformed(evt);
            }
        });

        deletb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        deletb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\icons8-delete-64.png")); // NOI18N
        deletb.setText("Delete");
        deletb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deletb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deletb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletbActionPerformed(evt);
            }
        });

        updateb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        updateb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\icons8-update-64.png")); // NOI18N
        updateb.setText("Update");
        updateb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        updateb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebActionPerformed(evt);
            }
        });

        viewb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        viewb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\icons8-view-64.png")); // NOI18N
        viewb.setText("View");
        viewb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        viewb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        viewb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbActionPerformed(evt);
            }
        });

        statb.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        statb.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\icons8-statistics-64.png")); // NOI18N
        statb.setText("Statistics");
        statb.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        statb.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        statb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operationsLayout = new javax.swing.GroupLayout(operations);
        operations.setLayout(operationsLayout);
        operationsLayout.setHorizontalGroup(
            operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(insertb)
                .addGap(71, 71, 71)
                .addComponent(deletb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addComponent(viewb)
                .addGap(73, 73, 73)
                .addComponent(statb)
                .addGap(30, 30, 30))
            .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(operationsLayout.createSequentialGroup()
                    .addGap(362, 362, 362)
                    .addComponent(updateb)
                    .addContainerGap(362, Short.MAX_VALUE)))
        );
        operationsLayout.setVerticalGroup(
            operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(operationsLayout.createSequentialGroup()
                        .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deletb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(insertb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26))
                    .addGroup(operationsLayout.createSequentialGroup()
                        .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewb, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(statb, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(operationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(operationsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(updateb)
                    .addContainerGap(26, Short.MAX_VALUE)))
        );

        getContentPane().add(operations, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, -1, 110));

        sidePanel.setBackground(new java.awt.Color(204, 204, 204));

        homen.setBackground(new java.awt.Color(204, 204, 204));
        homen.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        homen.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\homei.png")); // NOI18N
        homen.setText("Home");
        homen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        homen.setBorderPainted(false);
        homen.setContentAreaFilled(false);
        homen.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        homen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homenActionPerformed(evt);
            }
        });

        patn.setBackground(new java.awt.Color(204, 204, 204));
        patn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        patn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\patienti.png")); // NOI18N
        patn.setText("Patient");
        patn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        patn.setBorderPainted(false);
        patn.setContentAreaFilled(false);
        patn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patnActionPerformed(evt);
            }
        });

        docn.setBackground(new java.awt.Color(204, 204, 204));
        docn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        docn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\doctori.png")); // NOI18N
        docn.setText("Doctor");
        docn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        docn.setBorderPainted(false);
        docn.setContentAreaFilled(false);
        docn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docnActionPerformed(evt);
            }
        });

        nursen.setBackground(new java.awt.Color(204, 204, 204));
        nursen.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        nursen.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\nursei.png")); // NOI18N
        nursen.setText("Nurse");
        nursen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nursen.setBorderPainted(false);
        nursen.setContentAreaFilled(false);
        nursen.setDefaultCapable(false);
        nursen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nursenActionPerformed(evt);
            }
        });

        recepn.setBackground(new java.awt.Color(204, 204, 204));
        recepn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        recepn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\recepi.png")); // NOI18N
        recepn.setText("Receptionist");
        recepn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        recepn.setBorderPainted(false);
        recepn.setContentAreaFilled(false);
        recepn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recepnActionPerformed(evt);
            }
        });

        billn.setBackground(new java.awt.Color(204, 204, 204));
        billn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        billn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\billi.png")); // NOI18N
        billn.setText("Bill");
        billn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        billn.setBorderPainted(false);
        billn.setContentAreaFilled(false);
        billn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billnActionPerformed(evt);
            }
        });

        medicinen.setBackground(new java.awt.Color(204, 204, 204));
        medicinen.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        medicinen.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\medi.png")); // NOI18N
        medicinen.setText("Medicine");
        medicinen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        medicinen.setBorderPainted(false);
        medicinen.setContentAreaFilled(false);
        medicinen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicinenActionPerformed(evt);
            }
        });

        admn.setBackground(new java.awt.Color(204, 204, 204));
        admn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        admn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\admit.png")); // NOI18N
        admn.setText("Admission");
        admn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        admn.setBorderPainted(false);
        admn.setContentAreaFilled(false);
        admn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admnActionPerformed(evt);
            }
        });

        appn.setBackground(new java.awt.Color(204, 204, 204));
        appn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        appn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\appi.png")); // NOI18N
        appn.setText("Appointment");
        appn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        appn.setBorderPainted(false);
        appn.setContentAreaFilled(false);
        appn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appnActionPerformed(evt);
            }
        });

        servicen.setBackground(new java.awt.Color(204, 204, 204));
        servicen.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        servicen.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\servicei.png")); // NOI18N
        servicen.setText("Nursing Service");
        servicen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        servicen.setBorderPainted(false);
        servicen.setContentAreaFilled(false);
        servicen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicenActionPerformed(evt);
            }
        });

        presn.setBackground(new java.awt.Color(204, 204, 204));
        presn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        presn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\presi.png")); // NOI18N
        presn.setText("Prescription");
        presn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        presn.setBorderPainted(false);
        presn.setContentAreaFilled(false);
        presn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presnActionPerformed(evt);
            }
        });

        deptn.setBackground(new java.awt.Color(204, 204, 204));
        deptn.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        deptn.setIcon(new javax.swing.ImageIcon("C:\\Users\\evija\\OneDrive\\Documents\\NetBeansProjects\\HospitalManagement\\src\\main\\java\\com\\mycompany\\hospitalmanagement\\icons\\depti.png")); // NOI18N
        deptn.setText("Department");
        deptn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        deptn.setBorderPainted(false);
        deptn.setContentAreaFilled(false);
        deptn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deptn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(presn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(homen, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nursen, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(recepn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(billn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(medicinen, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(admn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(appn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(servicen, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(patn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 34, Short.MAX_VALUE))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homen)
                .addGap(21, 21, 21)
                .addComponent(deptn)
                .addGap(18, 18, 18)
                .addComponent(docn)
                .addGap(18, 18, 18)
                .addComponent(nursen)
                .addGap(18, 18, 18)
                .addComponent(patn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recepn)
                .addGap(18, 18, 18)
                .addComponent(billn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(medicinen)
                .addGap(18, 18, 18)
                .addComponent(admn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(appn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(servicen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(presn)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        getContentPane().add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 280, 660));

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void slideSidePanel(boolean show) {
    new Thread(() -> {
        int width = sidePanel.getWidth();
        int step = 10;
        int delay = 5;

        if (show) {
            for (int i = 0; i <= width; i += step) {
                sidePanel.setSize(i, sidePanel.getHeight());
                try { Thread.sleep(delay); } catch (InterruptedException e) {}
            }
        } else {
            for (int i = width; i >= 0; i -= step) {
                sidePanel.setSize(i, sidePanel.getHeight());
                try { Thread.sleep(delay); } catch (InterruptedException e) {}
            }
        }
        sidePanel.setVisible(show);
    }).start();
    
}
    
    
    private boolean isSidePanelVisible = true;
    private void toggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleActionPerformed
        // TODO add your handling code here:

        isSidePanelVisible = !isSidePanelVisible;  // Toggle state
        slideSidePanel(isSidePanelVisible);
    }//GEN-LAST:event_toggleActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        Login LoginFrame = new Login();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void insertbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertbActionPerformed
        // TODO add your handling code here:
        mainp.removeAll();
        mainp.add(insertp);
        mainp.repaint();
        mainp.revalidate();
    }//GEN-LAST:event_insertbActionPerformed

    private void deletbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletbActionPerformed
        mainp.removeAll();
        mainp.add(deletep);
        mainp.repaint();
        mainp.revalidate();        // TODO add your handling code here:
    }//GEN-LAST:event_deletbActionPerformed

    private void updatebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebActionPerformed
        // TODO add your handling code here:
        mainp.removeAll();
        mainp.add(updatep);
        mainp.repaint();
        mainp.revalidate();
    }//GEN-LAST:event_updatebActionPerformed

    private void viewbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbActionPerformed
        // TODO add your handling code here:
        mainp.removeAll();
        mainp.add(viewp);
        mainp.repaint();
        mainp.revalidate();
        try{
            Statement st1 = cn.createStatement();
             Statement st2 = cn.createStatement();
            String sql1 = "Select * from Room";
            String sql2 = "Select * from Room_Availability";
            ResultSet rs1 = st1.executeQuery(sql1);
            ResultSet rs2 = st2.executeQuery(sql2);
            DefaultTableModel tblModel1 = (DefaultTableModel)room_table.getModel();
            DefaultTableModel tblModel2 = (DefaultTableModel)roomav_table.getModel();
            tblModel1.setRowCount(0);
            tblModel2.setRowCount(0);

            while(rs1.next())
            {
                String R_id = String.valueOf(rs1.getInt("R_id"));
                String R_type = rs1.getString("R_type");
                String R_cost = String.valueOf(rs1.getInt("R_cost"));
                tblModel1.addRow(new Object[]{R_id,R_type,R_cost});
            }
               while(rs2.next())
            {
                String R_id = String.valueOf(rs2.getInt("R_id"));
                String R_Date = String.valueOf(rs2.getDate("R_date"));
                String R_avail = rs2.getString("R_available");
                String R_start = String.valueOf(rs2.getTimestamp("R_start_time"));
                String R_end = String.valueOf(rs2.getTimestamp("R_end_time"));
                tblModel2.addRow(new Object[]{R_id,R_Date,R_start,R_end,R_Date});
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error: "+e.getMessage());
        }
    }//GEN-LAST:event_viewbActionPerformed
    
    public JPanel createChartsPanel() {
        JPanel chartsPanel = new JPanel(new GridLayout(1, 2)); // Bar and Line side by side

        // Datasets
        DefaultCategoryDataset barDataset = new DefaultCategoryDataset();
        DefaultCategoryDataset lineDataset = new DefaultCategoryDataset();

        // DB Query
        try {
            // Use your method
            String sql = "SELECT R_date, R_available, COUNT(*) as count " +
                         "FROM Room_Availability " +
                         "GROUP BY R_date, R_available " +
                         "ORDER BY R_date";

            PreparedStatement ps = cn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String date = rs.getDate("R_date").toString();
                String available = rs.getString("R_available");
                int count = rs.getInt("count");

                // Bar dataset: one bar per availability per day
                barDataset.addValue(count, available, date);

                // Line dataset: only track "Yes" values
                if (available.equalsIgnoreCase("Yes")) {
                    lineDataset.addValue(count, "Available", date);
                }
            }

            rs.close();
            ps.close();
            cn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error loading charts: " + e.getMessage());
        }

        // ===== BAR CHART =====
        JFreeChart barChart = ChartFactory.createBarChart(
                "Room Availability per Date",
                "Date", "No. of Rooms",
                barDataset,
                PlotOrientation.VERTICAL,
                true, true, false
        );

        CategoryPlot barPlot = barChart.getCategoryPlot();
        barPlot.setBackgroundPaint(Color.white);

        // Custom bar colors
        BarRenderer renderer = (BarRenderer) barPlot.getRenderer();
        renderer.setSeriesPaint(0, new Color(102, 204, 255));  // Yes
        if (barDataset.getRowCount() > 1)
            renderer.setSeriesPaint(1, new Color(255, 102, 102));  // No

        // ===== LINE CHART =====
        JFreeChart lineChart = ChartFactory.createLineChart(
                "Room Availability Trend (Available Only)",
                "Date", "Available Rooms",
                lineDataset,
                PlotOrientation.VERTICAL,
                true, true, false
        );

        CategoryPlot linePlot = lineChart.getCategoryPlot();
        linePlot.setBackgroundPaint(Color.white);

        LineAndShapeRenderer lineRenderer = new LineAndShapeRenderer();
        lineRenderer.setSeriesPaint(0, new Color(0, 153, 76)); // Green
        lineRenderer.setSeriesStroke(0, new BasicStroke(2.0f));
        linePlot.setRenderer(lineRenderer);

        // Add to panels
        ChartPanel barPanel = new ChartPanel(barChart);
        ChartPanel linePanel = new ChartPanel(lineChart);

        chartsPanel.add(barPanel);
        chartsPanel.add(linePanel);

        return chartsPanel;
    }
    private void statbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statbActionPerformed
        // TODO add your handling code here:
       

    Room rac = new Room();
    JPanel chartPanel = rac.createChartsPanel();

  
    statp.removeAll();
        statp.setLayout(new java.awt.BorderLayout());
        statp.add(chartPanel, java.awt.BorderLayout.CENTER);
        statp.revalidate();
        statp.repaint();

        // Step 5: Show statp in mainp
        mainp.removeAll();
        mainp.add(statp);
        mainp.revalidate();
        mainp.repaint();
    }//GEN-LAST:event_statbActionPerformed

    private void room_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_insertActionPerformed
        // TODO add your handling code here:
        int r_id = Integer.parseInt(room_idti.getText());
        String r_type = room_tyti.getSelectedItem().toString();
        int r_cost = Integer.parseInt(room_costi.getText());
        String r_Available = room_avti.getSelectedItem().toString();
        String r_date =room_bookti.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String r_start = room_sti.getText();
        String r_end = room_eni.getText();
        SimpleDateFormat timestampFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");

 
        try{
         Date utildate = sdf.parse(r_date); 
        java.sql.Date sqldate = new java.sql.Date(utildate.getTime());
         java.util.Date utilTime1 = timestampFormat.parse(r_start);
             java.util.Date utilTime2 = timestampFormat.parse(r_end);
             java.sql.Timestamp sqlTime1 = new java.sql.Timestamp(utilTime1.getTime());
             java.sql.Timestamp sqlTime2 = new java.sql.Timestamp(utilTime2.getTime());
        String sql1 = "insert into Room values(?,?,?)";
         String sql2 = "insert into Room_Availability values(?,?,?,?,?)";
        PreparedStatement ps1 = cn.prepareStatement(sql1);
         PreparedStatement ps2 = cn.prepareStatement(sql2);
        ps1.setInt(1,r_id);
        ps1.setString(2,r_type);
        ps1.setInt(3,r_cost);
        ps2.setInt(1,r_id);
        ps2.setDate(2,sqldate);
        ps2.setTimestamp(3,sqlTime1);
        ps2.setTimestamp(4,sqlTime2);
        ps2.setString(5,r_Available);
       
        int rows1 = ps1.executeUpdate();
        int rows2 = ps2.executeUpdate();
        if(rows1>0)
        {
            JOptionPane.showMessageDialog(null,"Inserted value in Room");
            if(rows2>0)
           {
               JOptionPane.showMessageDialog(null,"Inserted value in Room Availability");
           }
            else{
            JOptionPane.showMessageDialog(null,"Insertion failed in Room Availability");
            }
        }
        else{
        JOptionPane.showMessageDialog(null,"Insertion failed in Room");
        }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error: "+e.getMessage());
        }
    }//GEN-LAST:event_room_insertActionPerformed

    private void room_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_deleteActionPerformed
        // TODO add your handling code here:
        int r_id = Integer.parseInt(room_idtd.getText());
        String sql = "delete from Room where R_id = ?";
        try{
        PreparedStatement ps = cn.prepareStatement(sql);
        ps.setInt(1,r_id);
        int rows = ps.executeUpdate();
        if(rows>0)
        {
        JOptionPane.showMessageDialog(null,"Deleted value in Room and Room Availability");
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Deletion failed in Room and Room Availability");
        }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error: "+e.getMessage());
        }
    }//GEN-LAST:event_room_deleteActionPerformed

    private void room_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_updateActionPerformed
        // TODO add your handling code here:
        int r_id = Integer.parseInt(room_idtu.getText());
        String r_type = room_tytu.getSelectedItem().toString();
        int r_cost = Integer.parseInt(room_costu.getText());
        String r_Available = room_avtu.getSelectedItem().toString();
        String r_date =room_booktu.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String r_start = room_stu.getText();
        String r_end = room_enu.getText();
        SimpleDateFormat timestampFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
 
        try{
   Date utildate = sdf.parse(r_date); 
        java.sql.Date sqldate = new java.sql.Date(utildate.getTime());
        java.util.Date utilTime1 = timestampFormat.parse(r_start);
             java.util.Date utilTime2 = timestampFormat.parse(r_end);
             java.sql.Timestamp sqlTime1 = new java.sql.Timestamp(utilTime1.getTime());
             java.sql.Timestamp sqlTime2 = new java.sql.Timestamp(utilTime2.getTime());
        String sql1 = "update Room set R_type = ?,R_cost=? where R_Id = ?";
         String sql2 = "update Room_Availability set R_date=?,R_start_time=?,R_end_time=?,R_available = ? where R_Id = ?";
        PreparedStatement ps1 = cn.prepareStatement(sql1);
         PreparedStatement ps2 = cn.prepareStatement(sql2);
        ps1.setInt(3,r_id);
        ps1.setString(1,r_type);
        ps1.setInt(2,r_cost);
        ps2.setTimestamp(2,sqlTime1);
        ps2.setTimestamp(3,sqlTime2);
        ps2.setString(4,r_Available);
        ps2.setInt(5,r_id);
        ps2.setDate(1,sqldate);
       
        int rows1 = ps1.executeUpdate();
        int rows2 = ps2.executeUpdate();
        if(rows1>0)
        {
            JOptionPane.showMessageDialog(null,"Update value in Room");
            if(rows2>0)
           {
               JOptionPane.showMessageDialog(null,"Updated value in Room Availability");
           }
            else{
            JOptionPane.showMessageDialog(null,"Updation failed in Room Availability");
            }
        }
        else{
        JOptionPane.showMessageDialog(null,"Updation failed in Room");
        }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error: "+e.getMessage());
        }
    }//GEN-LAST:event_room_updateActionPerformed

    private void room_costiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_costiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_room_costiActionPerformed

    private void room_booktiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_booktiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_room_booktiActionPerformed

    private void room_eniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_eniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_room_eniActionPerformed

    private void room_stiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_stiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_room_stiActionPerformed

    private void room_enuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_enuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_room_enuActionPerformed

    private void room_stuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room_stuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_room_stuActionPerformed

    private void homenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homenActionPerformed
        // TODO add your handling code here:
        welcome welcomeFrame = new welcome();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_homenActionPerformed

    private void patnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patnActionPerformed
        // TODO add your handling code here:
        Patient welcomeFrame = new Patient();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_patnActionPerformed

    private void docnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docnActionPerformed
        // TODO add your handling code here:
        Doctor welcomeFrame = new Doctor();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_docnActionPerformed

    private void nursenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nursenActionPerformed
        // TODO add your handling code here:
        Nurse welcomeFrame = new Nurse();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_nursenActionPerformed

    private void recepnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recepnActionPerformed
        // TODO add your handling code here:
        Receptionist welcomeFrame = new Receptionist();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_recepnActionPerformed

    private void billnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billnActionPerformed
        // TODO add your handling code here:
        Bill welcomeFrame = new Bill();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_billnActionPerformed

    private void medicinenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicinenActionPerformed
        Medicine welcomeFrame = new Medicine();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_medicinenActionPerformed

    private void admnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admnActionPerformed
        // TODO add your handling code here:
        Admission welcomeFrame = new Admission();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_admnActionPerformed

    private void appnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appnActionPerformed
        // TODO add your handling code here:
        Appointment welcomeFrame = new Appointment();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_appnActionPerformed

    private void servicenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicenActionPerformed
        Nursing_Service welcomeFrame = new Nursing_Service();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_servicenActionPerformed

    private void presnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presnActionPerformed
        // TODO add your handling code here:
        Prescription welcomeFrame = new Prescription();
        welcomeFrame.setVisible(true);
        welcomeFrame.pack();
        welcomeFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_presnActionPerformed

    private void deptnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptnActionPerformed
        // TODO add your handling code here:
        Department deptFrame = new Department();
        deptFrame.setVisible(true);
        deptFrame.pack();
        deptFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_deptnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Room().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admn;
    private javax.swing.JButton appn;
    private javax.swing.JButton billn;
    private javax.swing.JButton deletb;
    private javax.swing.JPanel deletep;
    private javax.swing.JButton deptn;
    private javax.swing.JButton docn;
    private javax.swing.JButton homen;
    private javax.swing.JButton insertb;
    private javax.swing.JPanel insertp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlabel;
    private javax.swing.JButton logout;
    private javax.swing.JPanel mainp;
    private javax.swing.JButton medicinen;
    private javax.swing.JButton nursen;
    private javax.swing.JPanel operations;
    private javax.swing.JButton patn;
    private javax.swing.JButton presn;
    private javax.swing.JButton recepn;
    private javax.swing.JComboBox<String> room_avti;
    private javax.swing.JComboBox<String> room_avtu;
    private javax.swing.JTextField room_bookti;
    private javax.swing.JTextField room_booktu;
    private javax.swing.JTextField room_costi;
    private javax.swing.JTextField room_costu;
    private javax.swing.JButton room_delete;
    private javax.swing.JTextField room_eni;
    private javax.swing.JTextField room_enu;
    private javax.swing.JTextField room_idtd;
    private javax.swing.JTextField room_idti;
    private javax.swing.JTextField room_idtu;
    private javax.swing.JButton room_insert;
    private javax.swing.JTextField room_sti;
    private javax.swing.JTextField room_stu;
    private javax.swing.JTable room_table;
    private javax.swing.JComboBox<String> room_tyti;
    private javax.swing.JComboBox<String> room_tytu;
    private javax.swing.JButton room_update;
    private javax.swing.JTable roomav_table;
    private javax.swing.JButton servicen;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JButton statb;
    private javax.swing.JPanel statp;
    private javax.swing.JButton toggle;
    private javax.swing.JButton updateb;
    private javax.swing.JPanel updatep;
    private javax.swing.JButton viewb;
    private javax.swing.JPanel viewp;
    // End of variables declaration//GEN-END:variables
}
